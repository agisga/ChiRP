sim_results=t(replicate(trials,sim(endog=FALSE)))
sim_results_endog=t(replicate(trials,sim(endog=TRUE)))
hist(sim_results[,2])
hist(sim_results_endog[,2])
hist(sim_results[,2], xlim=c(0,100))
hist(sim_results[,2])
hist(sim_results[,2]), xlim=c(0,1))
hist(sim_results[,2]), xlim=c(0,1))
hist(sim_results[,2], xlim=c(0,1))
hist(sim_results_endog[,2], add=T)
hist(sim_results[,2], xlim=c(0,1), freq=F, breaks = 50)
hist(sim_results_endog[,2], add=T, freq = F, breaks=50)
hist(sim_results[,2], xlim=c(0,1), freq=T, breaks = 50)
hist(sim_results_endog[,2], add=T, freq = T, breaks=50)
hist(sim_results[,2], xlim=c(0,1), freq=T, breaks = 20)
hist(sim_results_endog[,2], add=T, freq = T, breaks=20)
hist(sim_results_endog[,2], add=T, freq = T, breaks=20, col='blue')
devtools::install("/Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP")
devtools::install("/Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP")
install.packages('devtools')
devtools::install("/Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP")
library(ChiRP)
load("d.Rdata")
load("dt.Rdata")
zDP_res<-ZDPMix(d_train = d, d_test = dt,
formula = y ~ L1 + X1 + X2 + X3 + X4 + A,
burnin=1000, iter = 2000,phi_y = c(5,10000),init_k = 5)
tt <- cluster_assign_mode(zDP_res$cluster_inds$train)
table(tt$class_mem)
###--------------------------------------------------------------------------###
#### 0 - Clustered Data                                                     ####
###--------------------------------------------------------------------------###
load("d.Rdata")
setwd("/Users/aoganisi/Box Sync/R Packages/ChiRP/")
###--------------------------------------------------------------------------###
#### 0 - Clustered Data                                                     ####
###--------------------------------------------------------------------------###
load("d.Rdata")
load("dt.Rdata")
zDP_res<-ZDPMix(d_train = d, d_test = dt,
formula = y ~ L1 + X1 + X2 + X3 + X4 + A,
burnin=1000, iter = 2000,phi_y = c(5,10000),init_k = 5)
devtools::install("/Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP")
###--------------------------------------------------------------------------###
#### 0 - Clustered Data                                                     ####
###--------------------------------------------------------------------------###
load("d.Rdata")
load("dt.Rdata")
zDP_res<-ZDPMix(d_train = d, d_test = dt,
formula = y ~ L1 + X1 + X2 + X3 + X4 + A,
burnin=1000, iter = 2000,phi_y = c(5,10000),init_k = 5)
tt <- cluster_assign_mode(zDP_res$cluster_inds$train)
table(tt$class_mem)
par(mfrow=c(1,1))
plot(d$L1, d$y, pch=20, col=as.factor(tt$class_mem))
tt <- cluster_assign_mode(zDP_res$cluster_inds$train)
table(tt$class_mem)
par(mfrow=c(1,1))
plot(d$L1, d$y, pch=20, col=as.factor(tt$class_mem))
d$L1 <- scale(d$L1)
zDP_res<-ZDPMix(d_train = d, d_test = dt,
formula = y ~ L1 + X1 + X2 + X3 + X4 + A,
burnin=1000, iter = 2000,
phi_y = c(5,10000),init_k = 4)
zDP_res<-ZDPMix(d_train = d, d_test = dt,
formula = y ~ L1 + X1 + X2 + X3 + X4 + A,
burnin=2000, iter = 3000,
phi_y = c(5,10000),init_k = 4)
tt <- cluster_assign_mode(zDP_res$cluster_inds$train)
par(mfrow=c(1,1))
plot(d$L1, d$y, pch=20, col=as.factor(tt$class_mem))
set.seed(1)
zDP_res<-ZDPMix(d_train = d, d_test = dt,
formula = y ~ L1 + X1 + X2 + X3 + X4 + A,
burnin=2000, iter = 3000,
phi_y = c(5,10000),init_k = 5)
tt <- cluster_assign_mode(zDP_res$cluster_inds$train)
table(tt$class_mem)
par(mfrow=c(1,1))
plot(d$L1, d$y, pch=20, col=as.factor(tt$class_mem))
hist(zDP_res$predictions$test[3,])
dim(tt$class_mem)
dim(zDP_res$predictions$train)
apply(zDP_res$predictions$train,2, quantile, probs=seq(.02,.90,.02) )
gg <- apply(zDP_res$predictions$train,2, quantile, probs=seq(.02,.90,.02) )
gg <- rowMeans(apply(zDP_res$predictions$train,2, quantile, probs=seq(.02,.90,.02) ))
plot(gg, quantile(d$y, probs = seq(.02,.90,.02)), type='l')
abline(coef = c(0,1), lty=2, col='red')
plot(dt$L1, zDP_res$predictions$test[,3])
## individual-level predictive distributions on the test set
plot(dt$L1, zDP_res$predictions$test[,3], pch=20)
plot(d$L1, d$y, pch=20, col=as.factor(tt$class_mem))
## individual-level predictive distributions on the test set
plot(dt$L1, zDP_res$predictions$test[,1000], pch=20)
## individual-level predictive distributions on the test set
plot(dt$L1, zDP_res$predictions$test[,2000], pch=20)
## individual-level predictive distributions on the test set
plot(dt$L1, zDP_res$predictions$test[,50], pch=20)
## individual-level predictive distributions on the test set
plot(dt$L1, zDP_res$predictions$test[,100], pch=20)
## individual-level predictive distributions on the test set
plot(dt$L1, zDP_res$predictions$test[,200], pch=20)
hist(zDP_res$predictions$test[3,])
n <- 500
set.seed(3)
x<-seq(1,10*pi, length.out = n) # confounder
y<-rnorm( n = length(x), sin(.5*x), .07*x)
d <- data.frame(x=x, y=y)
d$x <- (d$x - mean(d$x))/sd(d$x)
plot(d$x,d$y, pch=20)
dt <- data.frame(x=seq(-1.5,1.5,.001))
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=1000, iter = 2000,
phi_y = c(5,2), beta_var_scale = 100000,init_k = 5)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
plot(d$x, d$y, pch=20)
for(i in 500:1000){
points(d$x, DPglm_res$predictions$train[,i], col='gray', pch=20)
}
points(d$x, d$y, pch=20)
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=1000, iter = 2000,
phi_y = c(5,2), beta_var_scale = 10000,init_k = 5, x_var_scale = .5)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
dt <- data.frame(x=seq(-1.5,1.5,.01))
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=1000, iter = 3000,
phi_y = c(5,2), beta_var_scale = 10000,init_k = 10, x_var_scale = .5)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=1000, iter = 3000,
phi_y = c(5,100), beta_var_scale = 10000,init_k = 10, x_var_scale = 2)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
DPglm_res<-NDPMix(d_train = tt, d_test = tt,
formula = Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width,
burnin=1000, iter = 2000,phi_y = c(5,10),
beta_var_scale = 1000, init_k=5, x_var_scale = 10)
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=1000, iter = 3000,
phi_y = c(5,10), beta_var_scale = 10000,init_k = 10, x_var_scale = 1)
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=1000, iter = 3000,
phi_y = c(5,10), beta_var_scale = 1000,init_k = 10, x_var_scale = 1)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=1000, iter = 3000,
phi_y = c(5,10), beta_var_scale = 1000,init_k = 10, x_var_scale = .05)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=1000, iter = 3000,
phi_y = c(5,1), beta_var_scale = 1000,init_k = 10, x_var_scale = .05)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=1000, iter = 3000,
phi_y = c(5,1), beta_var_scale = 1000,init_k = 10, x_var_scale = .01)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=2000, iter = 3000,
phi_y = c(5,1), beta_var_scale = 5000,init_k = 10, x_var_scale = .01)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=2000, iter = 3000,
phi_y = c(5,1), beta_var_scale = 5000,init_k = 10, x_var_scale = .1)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=2000, iter = 3000,
phi_y = c(5,100), beta_var_scale = 10000,init_k = 10, x_var_scale = 10)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
n <- 200
set.seed(3)
x<-seq(1,10*pi, length.out = n) # confounder
y<-rnorm( n = length(x), sin(.5*x), .07*x)
d <- data.frame(x=x, y=y)
d$x <- (d$x - mean(d$x))/sd(d$x)
plot(d$x,d$y, pch=20)
diag(vcov(lm(data=d, y~ x)))
1000*diag(vcov(lm(data=d, y~ x)))
var(d$y)
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=2000, iter = 3000,
phi_y = c(5,10), beta_var_scale = 1000,
init_k = 10, x_var_scale = 10)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=2000, iter = 3000,
phi_y = c(5,10), beta_var_scale = 1000,
init_k = 10, x_var_scale = 1)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=2000, iter = 3000,
phi_y = c(5,10), beta_var_scale = 1000,
init_k = 10, x_var_scale = .01)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=2000, iter = 3000,
phi_y = c(5,2), beta_var_scale = 1000,
init_k = 10, x_var_scale = 1)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=4000, iter = 5000,
phi_y = c(5,2), beta_var_scale = 1000,
init_k = 10, x_var_scale = 1)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=4000, iter = 5000,
phi_y = c(5,10), beta_var_scale = 1000,
init_k = 10, x_var_scale = 1)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=4000, iter = 5000,
phi_y = c(5,5), beta_var_scale = 1000,
init_k = 10, x_var_scale = 1)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=4000, iter = 5000,
phi_y = c(5,1), beta_var_scale = 10000,
init_k = 10, x_var_scale = 1)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=4000, iter = 5000,
phi_y = c(5,1), beta_var_scale = 10000,
init_k = 10, x_var_scale = 2)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=4000, iter = 5000,
phi_y = c(5,1), beta_var_scale = 10000,
init_k = 10, x_var_scale = .001)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=4000, iter = 5000,
phi_y = c(5,1), beta_var_scale = 10000,
init_k = 10, x_var_scale = 100)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=4000, iter = 5000,
phi_y = c(5,.1), beta_var_scale = 10000,
init_k = 10, x_var_scale = 100)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=4000, iter = 5000,
phi_y = c(5,10), beta_var_scale = 10000,
init_k = 10, x_var_scale = .5)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=4000, iter = 5000,
phi_y = c(5,10), beta_var_scale = 10000,
init_k = 10, x_var_scale = .05)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
devtools::install("/Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP")
library(ChiRP)
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=4000, iter = 5000,
phi_y = c(5,10), beta_var_scale = 10000,
init_k = 10, x_var_scale = .05)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
devtools::install("/Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP")
library(ChiRP)
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=4000, iter = 5000,
phi_y = c(5,10), beta_var_scale = 10000,
init_k = 10, x_var_scale = .05)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
devtools::install("/Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP")
library(ChiRP)
set.seed(1)
DPglm_res<-NDPMix(d_train = d, d_test = dt,
formula = y ~ x,
burnin=4000, iter = 5000,
phi_y = c(5,10), beta_var_scale = 10000,
init_k = 10, x_var_scale = .05, b2_scale = .1)
tt <- cluster_assign_mode(DPglm_res$cluster_inds$train)
plot(d$x, d$y, col=as.factor(tt$class_mem),pch=20 )
plot(d$x, d$y, pch=20)
for(i in 900:1000){
points(d$x, DPglm_res$predictions$train[,i], col='gray', pch=20)
}
points(d$x, d$y, pch=20)
points(d$x, rowMeans(DPglm_res$predictions$train), col='blue')
tt <- iris
tt$Sepal.Width <- scale(tt$Sepal.Width)
tt$Petal.Width <- scale(tt$Petal.Width)
tt$Petal.Length <- scale(tt$Petal.Length)
tt$Sepal.Length <- scale(tt$Sepal.Length)
DPglm_res<-NDPMix(d_train = tt, d_test = tt,
formula = Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width,
burnin=1000, iter = 2000,phi_y = c(5,1),
beta_var_scale = 10000, init_k=5, x_var_scale = 1, b2_scale = .1)
rr <- ChiRP::cluster_assign_mode(DPglm_res$cluster_inds$train)
par(mfrow=c(1,2))
plot(tt$Petal.Width, tt$Sepal.Length, col=as.factor(rr$class_mem),pch=20 )
plot(tt$Petal.Width, tt$Sepal.Length, col=as.factor(tt$Species),pch=20 )
tt <- iris
tt$Sepal.Width <- scale(tt$Sepal.Width)
tt$Petal.Width <- scale(tt$Petal.Width)
tt$Petal.Length <- scale(tt$Petal.Length)
tt$Sepal.Length <- scale(tt$Sepal.Length)
DPglm_res<-NDPMix(d_train = tt, d_test = tt,
formula = Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width,
burnin=4000, iter = 5000,phi_y = c(5,1),
beta_var_scale = 10000, init_k=5, x_var_scale = 1, b2_scale = .1)
rr <- ChiRP::cluster_assign_mode(DPglm_res$cluster_inds$train)
par(mfrow=c(1,2))
plot(tt$Petal.Width, tt$Sepal.Length, col=as.factor(rr$class_mem),pch=20 )
plot(tt$Petal.Width, tt$Sepal.Length, col=as.factor(tt$Species),pch=20 )
tt <- iris
tt$Sepal.Width <- scale(tt$Sepal.Width)
tt$Petal.Width <- scale(tt$Petal.Width)
tt$Petal.Length <- scale(tt$Petal.Length)
tt$Sepal.Length <- scale(tt$Sepal.Length)
DPglm_res<-NDPMix(d_train = tt, d_test = tt,
formula = Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width,
burnin=4000, iter = 6000,phi_y = c(5,1),
beta_var_scale = 10000, init_k=5, x_var_scale = 1, b2_scale = .1)
rr <- ChiRP::cluster_assign_mode(DPglm_res$cluster_inds$train)
par(mfrow=c(1,2))
plot(tt$Petal.Width, tt$Sepal.Length, col=as.factor(rr$class_mem),pch=20 )
plot(tt$Petal.Width, tt$Sepal.Length, col=as.factor(tt$Species),pch=20 )
tt <- iris
tt$Sepal.Width <- scale(tt$Sepal.Width)
tt$Petal.Width <- scale(tt$Petal.Width)
tt$Petal.Length <- scale(tt$Petal.Length)
tt$Sepal.Length <- scale(tt$Sepal.Length)
DPglm_res<-NDPMix(d_train = tt, d_test = tt,
formula = Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width,
burnin=8000, iter = 10000,phi_y = c(5,1),
beta_var_scale = 10000, init_k=5, x_var_scale = 1, b2_scale = .1)
rr <- ChiRP::cluster_assign_mode(DPglm_res$cluster_inds$train)
tt <- iris
tt$Sepal.Width <- scale(tt$Sepal.Width)
tt$Petal.Width <- scale(tt$Petal.Width)
tt$Petal.Length <- scale(tt$Petal.Length)
tt$Sepal.Length <- scale(tt$Sepal.Length)
DPglm_res<-NDPMix(d_train = tt, d_test = tt,
formula = Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width,
burnin=3000, iter = 4000,phi_y = c(5,1),
beta_var_scale = 10000, init_k=5, x_var_scale = 1, b2_scale = .5)
rr <- ChiRP::cluster_assign_mode(DPglm_res$cluster_inds$train)
par(mfrow=c(1,2))
plot(tt$Petal.Width, tt$Sepal.Length, col=as.factor(rr$class_mem),pch=20 )
plot(tt$Petal.Width, tt$Sepal.Length, col=as.factor(tt$Species),pch=20 )
table(rr$class_mem, tt$Species)
rr$class_mem
par(mfrow=c(1,2))
plot(tt$Petal.Width, tt$Sepal.Length, col=as.factor(rr$class_mem[,1]),pch=20 )
plot(tt$Petal.Width, tt$Sepal.Length, col=as.factor(tt$Species),pch=20 )
par(mfrow=c(1,2))
plot(tt$Petal.Width, tt$Sepal.Length, col=as.factor(rr$class_mem[,2]),pch=20 )
plot(tt$Petal.Width, tt$Sepal.Length, col=as.factor(tt$Species),pch=20 )
tt <- iris
tt$Sepal.Width <- scale(tt$Sepal.Width)
tt$Petal.Width <- scale(tt$Petal.Width)
tt$Petal.Length <- scale(tt$Petal.Length)
tt$Sepal.Length <- scale(tt$Sepal.Length)
set.seed(3)
DPglm_res<-NDPMix(d_train = tt, d_test = tt,
formula = Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width,
burnin=3000, iter = 4000,phi_y = c(5,1),
beta_var_scale = 10000, init_k=5, x_var_scale = 1, b2_scale = .5)
rr <- ChiRP::cluster_assign_mode(DPglm_res$cluster_inds$train)
par(mfrow=c(1,2))
plot(tt$Petal.Width, tt$Sepal.Length, col=as.factor(rr$class_mem[,2]),pch=20 )
plot(tt$Petal.Width, tt$Sepal.Length, col=as.factor(tt$Species),pch=20 )
install("C:/Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP")
library(roxygen2)
library(devtools)
library(devtools)
setwd("C:/Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP/")
setwd("Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP/")
setwd("/Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP/")
document()
devtools::install("/Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP")
library(ChiRP)
?NDPMix
load("d.Rdata")
load("dt.Rdata")
d$L1 <- scale(d$L1)
set.seed(1)
zDP_res<-ZDPMix(d_train = d, d_test = dt,
formula = y ~ L1 + X1 + X2 + X3 + X4 + A,
burnin=2000, iter = 3000,
phi_y = c(5,10000),init_k = 5)
tt <- cluster_assign_mode(zDP_res$cluster_inds$train)
table(tt$class_mem)
par(mfrow=c(1,1))
plot(d$L1, d$y, pch=20, col=as.factor(tt$class_mem))
setwd("/Users/aoganisi/Box Sync/R Packages/ChiRP/")
###--------------------------------------------------------------------------###
#### 0 - Clustered Data                                                     ####
###--------------------------------------------------------------------------###
load("d.Rdata")
load("dt.Rdata")
d$L1 <- scale(d$L1)
set.seed(1)
zDP_res<-ZDPMix(d_train = d, d_test = dt,
formula = y ~ L1 + X1 + X2 + X3 + X4 + A,
burnin=2000, iter = 3000,
phi_y = c(5,10000),init_k = 5)
tt <- cluster_assign_mode(zDP_res$cluster_inds$train)
table(tt$class_mem)
par(mfrow=c(1,1))
plot(d$L1, d$y, pch=20, col=as.factor(tt$class_mem))
par(mfrow=c(1,1))
plot(d$L1, d$y, pch=20, col=as.factor(tt$class_mem))
tt$class_mem
table(tt$class_mem)
tt <- cluster_assign_mode(zDP_res$cluster_inds$train)
setwd("/Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP/man/")
document()
devtools::install("C:/Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP")
load("d.Rdata")
load("dt.Rdata")
d$L1 <- scale(d$L1)
set.seed(1)
zDP_res<-ZDPMix(d_train = d, d_test = dt,
formula = y ~ L1 + X1 + X2 + X3 + X4 + A,
burnin=2000, iter = 3000,
phi_y = c(5,10000),init_k = 5)
tt <- cluster_assign_mode(zDP_res$cluster_inds$train)
table(tt$class_mem)
par(mfrow=c(1,1))
plot(d$L1, d$y, pch=20, col=as.factor(tt$class_mem))
setwd("/Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP/")
document()
install("C:/Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP")
install("C:/Users/aoganisi/Box Sync/R Packages/ChiRP/")
install("/Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP")
document()
install("C:/Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP")
install("/Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP")
