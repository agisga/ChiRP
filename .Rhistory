init_k = 5, tau_scale = 3, mu_scale = 3)
par(mfrow=c(1,1))
plot(probit_res$predictions$train[1,], type='l')
plot(probit_res$predictions$train[7,], type='l')
par(mfrow=c(2,2))
plot.roc(d_train$y, rowMeans(probit_res$predictions$train))
plot.roc(d_test$y, rowMeans(probit_res$predictions$test))
plot(probit_res$predictions$train[2,], type='l')
plot(probit_res$predictions$train[3,], type='l')
plot(probit_res$predictions$train[4,], type='l')
plot(probit_res$predictions$train[5,], type='l')
plot(probit_res$predictions$train[6,], type='l')
par(mfrow=c(2,2))
plot.roc(d_train$y, rowMeans(probit_res$predictions$train))
plot.roc(d_test$y, rowMeans(probit_res$predictions$test))
mean(d$y)
mean(d_train$y)
plot(rowMeans(probit_res$predictions$train), type='l')
mean(rowMeans(probit_res$predictions$train))
list.files()
dim(probit_res$predictions$test)
install.packages('Ecdat')
data(Ecdat::UnempDur)
Ecdat::UnempDur
?Ecdat::UnempDur
survival::aml
?survival::aml
survival::cancer
###--------------------------------------------------------------------------###
## Discrete time failure model
###--------------------------------------------------------------------------###
x1 <- replicate(2, rbinom(n = 150,size = 1, prob = .7 ))
x2 <- replicate(2, rbinom(n = 150,size = 1, prob = .4 ))
y <- numeric(length = 300)
exp(1)
x1 <- replicate(2, rbinom(n = 150,size = 1, prob = .7 ))
x2 <- replicate(2, rbinom(n = 150,size = 1, prob = .4 ))
y <- numeric(length = 300)
y[1:150] <- rexp(n = 150, rate = exp(3 + x1 %*% matrix(c(1,2), ncol=1)  ) )
y[150:300] <- rexp(n = 150, rate = exp(5 + x1 %*% matrix(c(-1, - 2), ncol=1)  ) )
x1 <- replicate(2, rbinom(n = 150,size = 1, prob = .7 ))
x2 <- replicate(2, rbinom(n = 150,size = 1, prob = .4 ))
y <- numeric(length = 300)
y[1:150] <- rexp(n = 150, rate = exp(3 + x1 %*% matrix(c(1,2), ncol=1)  ) )
y[151:300] <- rexp(n = 150, rate = exp(5 + x1 %*% matrix(c(-1, - 2), ncol=1)  ) )
d <- data.frame(rbind(x1, x2), y)
View(d)
set.seed(1)
x1 <- replicate(2, rbinom(n = 150,size = 1, prob = .7 ))
x2 <- replicate(2, rbinom(n = 150,size = 1, prob = .4 ))
y <- numeric(length = 300)
y[1:150] <- rpois(n = 150, rate = exp(3 + x1 %*% matrix(c(1,2), ncol=1)  ) )
y[151:300] <- rpois(n = 150, rate = exp(5 + x1 %*% matrix(c(-1, - 2), ncol=1)  ) )
set.seed(1)
x1 <- replicate(2, rbinom(n = 150,size = 1, prob = .7 ))
x2 <- replicate(2, rbinom(n = 150,size = 1, prob = .4 ))
y <- numeric(length = 300)
y <- numeric(length = 300)
y[1:150] <- rpois(n = 150, lambda = exp(3 + x1 %*% matrix(c(1,2), ncol=1)  ) )
y[151:300] <- rpois(n = 150, lambda = exp(5 + x1 %*% matrix(c(-1, - 2), ncol=1)  ) )
d <- data.frame(rbind(x1, x2), y)
View(d)
set.seed(1)
x1 <- replicate(2, rbinom(n = 150,size = 1, prob = .7 ))
x2 <- replicate(2, rbinom(n = 150,size = 1, prob = .4 ))
y <- numeric(length = 300)
y[1:150] <- rpois(n = 150, lambda = exp(-3 + x1 %*% matrix(c(1,2), ncol=1)  ) )
y[151:300] <- rpois(n = 150, lambda = exp(-5 + x1 %*% matrix(c(-1, - 2), ncol=1)  ) )
d <- data.frame(rbind(x1, x2), y)
View(d)
set.seed(1)
x1 <- replicate(2, rbinom(n = 150,size = 1, prob = .7 ))
x2 <- replicate(2, rbinom(n = 150,size = 1, prob = .4 ))
y <- numeric(length = 300)
y[1:150] <- rpois(n = 150, lambda = exp(-2 + x1 %*% matrix(c(1,2), ncol=1)  ) )
y[151:300] <- rpois(n = 150, lambda = exp(-3 + x1 %*% matrix(c(-1, - 2), ncol=1)  ) )
d <- data.frame(rbind(x1, x2), y)
table(d$y)
set.seed(1)
x1 <- replicate(2, rbinom(n = 150,size = 1, prob = .7 ))
x2 <- replicate(2, rbinom(n = 150,size = 1, prob = .4 ))
y <- numeric(length = 300)
y[1:150] <- rpois(n = 150, lambda = exp(-1 + x1 %*% matrix(c(1,2), ncol=1)  ) )
y[151:300] <- rpois(n = 150, lambda = exp(-1 + x1 %*% matrix(c(-1, - 2), ncol=1)  ) )
d <- data.frame(rbind(x1, x2), y)
table(d$y)
table(d$y[d$X1==1])
table(d$y[d$X1==0])
table(d$y[d$X2==0])
table(d$y[d$X2==1])
d <- data.frame(id=1:300,rbind(x1, x2), y)
View(d)
library(tidyr)
install.packages('tidyr')
library(tidyr)
dlong <- d %>% uncount(y)
View(dlong)
dlong$time <- rownames(dlong)
View(dlong)
dlong$time <- ifelse(dlong$id==dlong$time, 0, dlong$time)
View(dlong)
dlong <- d %>% uncount(y)
dlong$time <- rownames(dlong)
dlong$time <- ifelse(dlong$id==dlong$time, 0, substr(dlong$time,3,3))
View(dlong)
View(d)
View(dlong)
dlong <- merge(dlong, d[,c('id','y') ], id='id', all.x = T)
View(dlong)
dlong <- d %>% uncount(y)
dlong$time <- rownames(dlong)
dlong$time <- ifelse(dlong$id==dlong$time, 0, substr(dlong$time,3,100))
dlong <- merge(dlong, d[,c('id','y') ], id='id', all.x = T)
View(dlong)
dlong$y <- ifelse(dlong$y==dlong$time-1,1, 0)
dlong <- d %>% uncount(y)
dlong$time <- rownames(dlong)
dlong$time <- ifelse(dlong$id==dlong$time, 0, substr(dlong$time,3,100))
dlong$time <- as.numeric(dlong$time)
dlong <- merge(dlong, d[,c('id','y') ], id='id', all.x = T)
dlong$y <- ifelse(dlong$y==dlong$time-1,1, 0)
View(dlong)
dlong <- d %>% uncount(y)
dlong$time <- rownames(dlong)
dlong$time <- ifelse(dlong$id==dlong$time, 0, substr(dlong$time,3,100))
dlong$time <- as.numeric(dlong$time)
dlong <- merge(dlong, d[,c('id','y') ], id='id', all.x = T)
dlong$y <- ifelse(dlong$y==dlong$time+1,1, 0)
View(dlong)
View(dlong)
logit_res <- PDPMix(d_train = dlong, d_test = dlong[1:2,],
formula = y ~ X1 + X2,
burnin = 1000, iter = 2000,
beta_prior_var = rep(3, 3), # fairly flat priors
beta_prior_mean = rep(0,3), # null centered priors
prop_sigma_b = diag(rep(.001, 3)) , # proposal covariance
init_k = 5, tau_scale = 3, mu_scale = 3)
dlong$pred <- rowMeans(logit_res$predictions$train)
length(rowMeans(logit_res$predictions$train))
View(dlong)
sum(dlong$pred[dlong$id==1])
dlong$haz <- rowMeans(logit_res$predictions$train)
dlong$not_haz <- 1-dlong$haz
cumprod(c(1,2,3))
cumprod(c(1,2,3,4))
library(dplyr)
library(tidyr)
dlong <- dlong %>%
group_by(id) %>%
mutate(surv = cumprod(not_haz))
View(dlong)
table(d$y)
library(dplyr)
library(tidyr)
set.seed(1)
x1 <- replicate(2, rbinom(n = 150,size = 1, prob = .7 ))
x2 <- replicate(2, rbinom(n = 150,size = 1, prob = .4 ))
y <- numeric(length = 300)
y[1:150] <- rpois(n = 150, lambda = exp(-1 + x1 %*% matrix(c(1,2), ncol=1)  ) )
y[151:300] <- rpois(n = 150, lambda = exp(-1 + x1 %*% matrix(c(-1, - 2), ncol=1)  ) )
d <- data.frame(id=1:300,rbind(x1, x2), y)
dlong <- d %>% uncount(y)
dlong$time <- rownames(dlong)
View(dlong)
set.seed(1)
x1 <- replicate(2, rbinom(n = 150,size = 1, prob = .7 ))
x2 <- replicate(2, rbinom(n = 150,size = 1, prob = .4 ))
y <- numeric(length = 300)
y[1:150] <- rpois(n = 150, lambda = exp(-1 + x1 %*% matrix(c(1,2), ncol=1)  ) )
y[151:300] <- rpois(n = 150, lambda = exp(-1 + x1 %*% matrix(c(-1, - 2), ncol=1)  ) )
d <- data.frame(id=1:300,rbind(x1, x2), y)
dlong <- d %>% uncount(y)
dlong$time <- rownames(dlong)
dlong$time <- ifelse(dlong$id==dlong$time, 0, substr(dlong$time,3,100))
dlong$time <- as.numeric(dlong$time)
dlong <- merge(dlong, d[,c('id','y') ], id='id', all.x = T)
dlong$y <- ifelse(dlong$y==dlong$time+1,1, 0)
View(dlong)
View(d)
View(dlong)
View(dlong)
dbsl <- dlong[dlong$time==0, ]
View(dbsl)
View(dlong)
View(d)
set.seed(1)
x1 <- replicate(2, rbinom(n = 150,size = 1, prob = .7 ))
x2 <- replicate(2, rbinom(n = 150,size = 1, prob = .4 ))
y <- numeric(length = 300)
y[1:150] <- rpois(n = 150, lambda = exp(-1 + x1 %*% matrix(c(1,2), ncol=1)  ) )
y[151:300] <- rpois(n = 150, lambda = exp(-1 + x1 %*% matrix(c(-1, - 2), ncol=1)  ) )
d <- data.frame(id=1:300,rbind(x1, x2), y)
dlong <- d %>% uncount(y)
dlong$time <- rownames(dlong)
View(dlong)
grepl(pattern = ".", x = dlong$time)
grep(pattern = ".", x = dlong$time)
regexpr(pattern = ".", x = dlong$time)
gregexpr(pattern = ".", text = dlong$time)
as.numeric(gregexpr(pattern = ".", text = dlong$time))
gg <- gregexpr(pattern = ".", text = dlong$time)
gg <- gregexpr(pattern = ".", dlong$time)
gg
gg <- gregexpr(pattern = "9", dlong$time)
gg
gg <- gregexpr(pattern = ".", dlong$time)
gg
View(dlong)
gg <- gregexpr(pattern = "\.", dlong$time)
gg <- gregexpr(pattern = "/.", dlong$time)
?gregexpr
grep(".",dlong$time)
grep(".",dlong$time, fixed=T)
gg <- gregexpr(pattern = ".", dlong$time, fixed=T)
gg
set.seed(1)
x1 <- replicate(2, rbinom(n = 150,size = 1, prob = .7 ))
x2 <- replicate(2, rbinom(n = 150,size = 1, prob = .4 ))
y <- numeric(length = 300)
y[1:150] <- rpois(n = 150, lambda = exp(-1 + x1 %*% matrix(c(1,2), ncol=1)  ) )
y[151:300] <- rpois(n = 150, lambda = exp(-1 + x1 %*% matrix(c(-1, - 2), ncol=1)  ) )
d <- data.frame(id=1:300,rbind(x1, x2), y)
View(d)
dlong <- d %>% uncount(y,.id = 'test')
View(dlong)
dlong <- d %>% uncount(y,.id = 'time')
View(dlong)
dbsl <- dlong[dlong$time==1,]
dlong <- d %>% uncount(y,.id = 'time')
dbsl <- dlong[dlong$time==1,]
View(dlong)
table(dlong$time)
d$y <- d$y + 1
dlong <- d %>% uncount(y,.id = 'time')
dbsl <- dlong[dlong$time==1,]
dbsl$time <- 0
View(dbsl)
View(dlong)
dlong <- rbind(dbsl, dlong)
dlong <- dlong[order(dlong$id, dlong$time)]
dlong <- dlong[order(dlong$id, dlong$time),]
View(dlong)
View(d)
View(dlong)
dlong <- merge(dlong, d[,c('id','y') ], id='id', all.x = T)
View(dlong)
dlong$y <- ifelse(dlong$y==dlong$time,1, 0)
View(dlong)
logit_res <- PDPMix(d_train = dlong, d_test = dlong[1:2,],
formula = y ~ X1 + X2,
burnin = 1000, iter = 2000,
beta_prior_var = rep(3, 3), # fairly flat priors
beta_prior_mean = rep(0,3), # null centered priors
prop_sigma_b = diag(rep(.001, 3)) , # proposal covariance
init_k = 5, tau_scale = 3, mu_scale = 3)
dlong$haz <- rowMeans(logit_res$predictions$train)
dlong$not_haz <- 1-dlong$haz
dlong <- dlong %>%
group_by(id) %>%
mutate(surv = cumprod(not_haz))
View(dlong)
table(dlong$time, dlong$y)
sumres <- dlong %>%
group_by(X1, time) %>%
summarise(surv=mean(surv))
View(sumres)
plot(sumres$time[sumres$X1==1], sumres$surv[sumres$X1==1], type='s')
plot(sumres$time[sumres$X1==0], sumres$surv[sumres$X1==0], type='s')
set.seed(1)
x1 <- replicate(2, rbinom(n = 150,size = 1, prob = .7 ))
x2 <- replicate(2, rbinom(n = 150,size = 1, prob = .4 ))
y <- numeric(length = 200)
y[1:100] <- rpois(n = 100, lambda = exp(-1 + x1 %*% matrix(c(1,2), ncol=1)  ) )
y[101:200] <- rpois(n = 100, lambda = exp(-1 + x1 %*% matrix(c(-1, - 2), ncol=1)  ) )
d <- data.frame(id=1:200,rbind(x1, x2), y)
set.seed(1)
x1 <- replicate(2, rbinom(n = 100,size = 1, prob = .7 ))
x2 <- replicate(2, rbinom(n = 100,size = 1, prob = .4 ))
y <- numeric(length = 200)
y[1:100] <- rpois(n = 100, lambda = exp(-1 + x1 %*% matrix(c(1,2), ncol=1)  ) )
y[101:200] <- rpois(n = 100, lambda = exp(-1 + x1 %*% matrix(c(-1, - 2), ncol=1)  ) )
d <- data.frame(id=1:200,rbind(x1, x2), y)
d$y <- d$y + 1
dlong <- d %>% uncount(y,.id = 'time')
dbsl <- dlong[dlong$time==1,]
dbsl$time <- 0
dlong <- rbind(dbsl, dlong)
dlong <- dlong[order(dlong$id, dlong$time),]
dlong <- merge(dlong, d[,c('id','y') ], id='id', all.x = T)
dlong$y <- ifelse(dlong$y==dlong$time,1, 0)
max(dlong$time  )
dtest <- data.frame(time=c(1:15, 1:15), X1=1, X2=0)
View(d_test)
View(dtest)
logit_res <- PDPMix(d_train = dlong, d_test = dtest,
formula = y ~ X1 + X2 + time,
burnin = 1000, iter = 2000,
beta_prior_var = rep(3, 3), # fairly flat priors
beta_prior_mean = rep(0,3), # null centered priors
prop_sigma_b = diag(rep(.001, 3)) , # proposal covariance
init_k = 5, tau_scale = 3, mu_scale = 3)
logit_res <- PDPMix(d_train = dlong, d_test = dtest,
formula = y ~ X1 + X2 + time,
burnin = 1000, iter = 2000,
beta_prior_var = rep(3, 4), # fairly flat priors
beta_prior_mean = rep(0,4), # null centered priors
prop_sigma_b = diag(rep(.001, 4)) , # proposal covariance
init_k = 5, tau_scale = 3, mu_scale = 3)
dtest$haz <- rowMeans(logit_res$predictions$test)
dtest$not_haz <- 1-dtest$haz
dtest <- dtest %>%
group_by(id) %>%
mutate(surv = cumprod(not_haz))
View(dtest)
View(d_test)
View(dtest)
dtest <- rbind(data.frame(time=1:15, X1=1, X2=0),
data.frame(time=1:15, X1=1, X2=0))
dtest <- rbind(data.frame(time=1:15, X1=1, X2=0),
data.frame(time=1:15, X1=0, X2=0))
logit_res <- PDPMix(d_train = dlong, d_test = dtest,
formula = y ~ X1 + X2 + time,
burnin = 1000, iter = 2000,
beta_prior_var = rep(3, 4), # fairly flat priors
beta_prior_mean = rep(0,4), # null centered priors
prop_sigma_b = diag(rep(.001, 4)) , # proposal covariance
init_k = 5, tau_scale = 3, mu_scale = 3)
dtest$haz <- rowMeans(logit_res$predictions$test)
dtest$not_haz <- 1-dtest$haz
dtest <- dtest %>%
group_by(X1) %>%
mutate(surv = cumprod(not_haz))
View(dtest)
plot(dtest$time[dtest$X1==1], dtest$surv[dtest$X1==1], type='s')
lines(dtest$time[dtest$X1==0], dtest$surv[dtest$X1==0], type='s', col='red')
plot(dtest$time[dtest$X1==1], dtest$surv[dtest$X1==1], type='l')
lines(dtest$time[dtest$X1==0], dtest$surv[dtest$X1==0], type='l', col='red')
set.seed(1)
x1 <- rbinom(n = 200,size = 1, prob = .7 )
y <- rpois(n = 200, lambda = exp(-1 + 3*x1 ) )
d <- data.frame(id=1:200,x1, y)
View(d)
d <- data.frame(id=1:200,X1=x1, y)
set.seed(1)
X1 <- rbinom(n = 200,size = 1, prob = .7 )
y <- rpois(n = 200, lambda = exp(-1 + 3*x1 ) )
d <- data.frame(id=1:200,X1, y)
View(d)
d$y <- d$y + 1
dlong <- d %>% uncount(y,.id = 'time')
dbsl <- dlong[dlong$time==1,]
dbsl$time <- 0
dlong <- rbind(dbsl, dlong)
dlong <- dlong[order(dlong$id, dlong$time),]
View(dlong)
set.seed(1)
X1 <- rbinom(n = 200,size = 1, prob = .7 )
y <- rpois(n = 200, lambda = exp(-5 + 3*x1 ) )
d <- data.frame(id=1:200,X1, y)
d$y <- d$y + 1
dlong <- d %>% uncount(y,.id = 'time')
dbsl <- dlong[dlong$time==1,]
dbsl$time <- 0
dlong <- rbind(dbsl, dlong)
dlong <- dlong[order(dlong$id, dlong$time),]
View(dtest)
View(dlong)
table(d$y)
set.seed(1)
X1 <- rbinom(n = 200,size = 1, prob = .7 )
y <- rpois(n = 200, lambda = exp(-2 + 3*x1 ) )
d <- data.frame(id=1:200,X1, y)
d$y <- d$y + 1
dlong <- d %>% uncount(y,.id = 'time')
dbsl <- dlong[dlong$time==1,]
dbsl$time <- 0
dlong <- rbind(dbsl, dlong)
dlong <- dlong[order(dlong$id, dlong$time),]
table(d$y)
set.seed(1)
X1 <- rbinom(n = 200,size = 1, prob = .7 )
y <- rpois(n = 200, lambda = exp(-2 + 3*x1 ) )
d <- data.frame(id=1:200,X1, y)
d$y <- d$y + 1
dlong <- d %>% uncount(y,.id = 'time')
dbsl <- dlong[dlong$time==1,]
dbsl$time <- 0
dlong <- rbind(dbsl, dlong)
dlong <- dlong[order(dlong$id, dlong$time),]
dlong <- merge(dlong, d[,c('id','y') ], id='id', all.x = T)
dlong$y <- ifelse(dlong$y==dlong$time,1, 0)
table(d$y)
dtest <- rbind(data.frame(time=1:9, X1=1),
data.frame(time=1:9, X1=0))
dlong$X1xtime <- dlong$X1*dlong$time
dtest$X1xtime <- dtest$X1*dtest$time
logit_res <- PDPMix(d_train = dlong, d_test = dtest,
formula = y ~ X1 + time + X1xtime,
burnin = 1000, iter = 2000,
beta_prior_var = rep(3, 4), # fairly flat priors
beta_prior_mean = rep(0,4), # null centered priors
prop_sigma_b = diag(rep(.001, 4)) , # proposal covariance
init_k = 5, tau_scale = 3, mu_scale = 3)
dtest$haz <- rowMeans(logit_res$predictions$test)
dtest$not_haz <- 1-dtest$haz
View(dtest)
dtest <- dtest %>%
group_by(X1) %>%
mutate(surv = cumprod(not_haz))
View(dtest)
plot(dtest$time[dtest$X1==1], dtest$surv[dtest$X1==1], type='l')
lines(dtest$time[dtest$X1==0], dtest$surv[dtest$X1==0], type='l', col='red')
plot(dtest$time[dtest$X1==1], dtest$surv[dtest$X1==1], type='l', ylim=c(0,1))
lines(dtest$time[dtest$X1==0], dtest$surv[dtest$X1==0], type='l', col='red')
devtools::install_github('stablemarkets/ChiRP')
library(ChiRP)
citation('ggplog2')
citation('ggplot2')
devtools::install_github('stablemarkets/ChiRP')
library(ChiRP)
devtools::install_github('stablemarkets/ChiRP')
devtools::install_github('stablemarkets/ChiRP')
library(ChiRP)
tt <- iris
tt$Sepal.Width <- scale(tt$Sepal.Width)
tt$Petal.Width <- scale(tt$Petal.Width)
tt$Petal.Length <- scale(tt$Petal.Length)
tt$Sepal.Length <- scale(tt$Sepal.Length)
set.seed(3)
DPglm_res<-NDPMix(d_train = tt,
formula = Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width,
burnin=3000, iter = 4000,phi_y = c(5,1),
beta_var_scale = 10000, init_k=5, x_var_scale = 1, b2_scale = .5)
set.seed(3)
DPglm_res<-NDPMix(d_train = tt,
formula = Sepal.Length ~ Sepal.Width + Petal.Length + Petal.Width,
burnin=3000, iter = 4000,phi_y = c(5,1),
beta_var_scale = 10000, init_k=5, x_var_scale = 1, b2_scale = .5)
devtools::install_github('stablemarkets/ChiRP')
library(ChiRP)
?ZDPMix
?PDPMix
?NDPMix
library(ChiRP)
## install.packages('devtools' ) ## make sure to have devtools intalled
devtools::install_github('stablemarkets/ChiRP')
library(ChiRP)
?ChiRP::cluster_assign_mode
devtools::install_github('stablemarkets/ChiRP')
library(ChiRP)
devtools::install_github('stablemarkets/ChiRP', force=T)
library(ChiRP)
?ZDPMix
set.seed(1)
n<-200 ## generate from clustered, skewed, data distribution
X11 <- rnorm(n = n, mean = 10, sd = 3)
X12 <- rnorm(n = n, mean = 0, sd = 2)
X13 <- rnorm(n = n, mean = -10, sd = 4)
Y1 <- rnorm(n = n, mean = 100 + .5*X11, 20)*(1-rbinom(n, 1, prob = pnorm( -10 + 1*X11 ) ))
Y2 <- rnorm(n = n, mean = 200 + 1*X12, 30)*(1-rbinom(n, 1, prob = pnorm( 1 + .05*X12 ) ))
Y3 <- rnorm(n = n, mean = 300 + 2*X13, 40)*(1-rbinom(n, 1, prob = pnorm( -3 -.2*X13 ) ))
d <- data.frame(X1=c(X11, X12, X13), Y = c(Y1, Y2, Y3))
d$X1 <- scale(d$X1)
ids <- sample(1:600, size = 500, replace = F )
d_train <- d[ids,]
d_test <- d[-ids, ]
res <- ChiRP::ZDPMix(d_train = d_train, d_test = d_test, formula = Y ~ X1,
burnin=2000, iter=3000, init_k = 5, phi_y = c(10, 10000))
mean
`+`
devtools::install_github('stablemarkets/ChiRP', force=T)
library(ChiRP)
?ZDPMix
?ZDPMix
devtools::install_github('stablemarkets/ChiRP', force=T)
library(ChiRP)
?ZDPMix
library(ChiRP)
?ZDPMix
library(ChiRP)
?ZDPMix
devtools::install_github('stablemarkets/ChiRP', force=T)
library(ChiRP)
?ZDPMix
?ZDPMix
devtools::install_github('stablemarkets/ChiRP', force=T)
library(ChiRP)
?ZDPMix
?ZDPMix
searchI
search()
detach("package:ChiRP")
library(ChiRP)
?ZDPMix
q()
?ChiRP::NDPMix()
?ChiRP::ZDPMix()
ls
library(roxygen2)
?rmarkdown::document()
library(devtools)
devtools::document()
getwd()
setwd("/Users/aoganisi/Box Sync/R Packages/ChiRP/ChiRP")
devtools::document()
devtools::document()
ls
list.files()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
